apiVersion: v1
kind: Service
metadata:
  name: time2codeserver
spec:
  type: LoadBalancer
  ports:
  - name: time2codeserver-5555
    port: 5555
    protocol: TCP
    targetPort: 5555
  selector:
    app: time2codeserver
    component: time2codeserver

---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  labels:
    app: gateway
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: gateway
---
apiVersion: v1
kind: Service
metadata:
  name: faas-netesd
  labels:
    app: faas-netesd
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: faas-netesd
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  type: LoadBalancer
  ports:
    - port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    app: prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  labels:
    app: alertmanager
spec:
  type: LoadBalancer
  ports:
    - port: 9093
      protocol: TCP
      targetPort: 9093
  selector:
    app: alertmanager



---
apiVersion: apps/v1beta1 # for versions before 1.6.0 use extensions/v1beta1
kind: Deployment
metadata:
  name: alertmanager
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: alertmanager
    spec:
      containers:
      - name: alertmanager
        image: functions/alertmanager:latest-k8s
        imagePullPolicy: Always
        imagePullPolicy: Always
        command: ["/bin/alertmanager","-config.file=/alertmanager.yml", "-storage.path=/alertmanager"]
        ports:
        - containerPort: 9003
          protocol: TCP
      restartPolicy: Always
      volumes: null

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: csharp-experimental
spec:
  replicas: 0
  rollbackTo:
    revision: 0
  selector:
    matchLabels:
      app: time2code
      component: csharp-experimental
  strategy:
    rollingUpdate:
      maxSurge: 1000
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: time2code
        component: csharp-experimental
    spec:
      containers:
      - env:
        - name: fprocess
          value: python3 time2CSharp.py
        - name: https_proxy
          value: $https_proxy
        - name: no_proxy
          value: gateway
        - name: read_timeout
          value: "60"
        - name: write_timeout
          value: "60"
        image: jockdarock/time2csharp:latest
        imagePullPolicy: Always
        name: csharp-experimental
  nodename: aci-connector

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gateway
spec:
  replicas: 1
  rollbackTo:
    revision: 0
  selector:
    matchLabels:
      app: time2code
      component: gateway
  strategy:
    rollingUpdate:
      maxSurge: 10
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: time2code
        component: gateway
    spec:
      containers:
      - env:
        - name: dnsrr
          value: "true"
        - name: read_timeout
          value: "60"
        - name: write_timeout
          value: "60"
        - name: functions_provider_url
          value: "http://faas-netesd.default:8080/"
        image: functions/gateway:0.5.8-alpha
        imagePullPolicy: Always
        name: gateway
        ports:
        - containerPort: 8080
          protocol: TCP
      restartPolicy: Always

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: golang
spec:
  replicas: 1
  rollbackTo:
    revision: 0
  selector:
    matchLabels:
      app: time2code
      component: golang
  strategy:
    rollingUpdate:
      maxSurge: 1000
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: time2code
        component: golang
    spec:
      containers:
      - env:
        - name: fprocess
          value: python3 time2go.py
        - name: https_proxy
          value: $https_proxy
        - name: no_proxy
          value: gateway
        - name: read_timeout
          value: "60"
        - name: write_timeout
          value: "60"
        image: jockdarock/time2go:latest
        imagePullPolicy: Always
        name: golang
      nodename: aci-connector

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nodejs
spec:
  replicas: 0
  rollbackTo:
    revision: 0
  selector:
    matchLabels:
      app: time2code
      component: nodejs
  strategy:
    rollingUpdate:
      maxSurge: 1000
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: time2code
        component: nodejs
    spec:
      containers:
      - env:
        - name: fprocess
          value: python3 time2nodejs.py
        - name: https_proxy
          value: $https_proxy
        - name: no_proxy
          value: gateway
        - name: read_timeout
          value: "60"
        - name: write_timeout
          value: "60"
        image: jockdarock/time2nodejs:latest
        imagePullPolicy: Always
        name: nodejs
      nodename: aci-connector

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: powershell
spec:
  replicas: 0
  rollbackTo:
    revision: 0
  selector:
    matchLabels:
      app: time2code
      component: powershell
  strategy:
    rollingUpdate:
      maxSurge: 1000
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: time2code
        component: powershell
    spec:
      containers:
      - env:
        - name: fprocess
          value: python3 time2powershell.py
        - name: https_proxy
          value: $https_proxy
        - name: no_proxy
          value: gateway
        - name: read_timeout
          value: "60"
        - name: write_timeout
          value: "60"
        image: jockdarock/time2powershell:latest
        imagePullPolicy: Always
        name: powershell
        volumeMounts: null
      volumes: null
      nodename: aci-connector

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: functions/prometheus:latest-k8s
        imagePullPolicy: Always
        command: ["prometheus","-config.file=/etc/prometheus/prometheus.yml", "-storage.local.path=/prometheus", "-storage.local.memory-chunks=10000", "--alertmanager.url=http://alertmanager.default:9093"]
        imagePullPolicy: Always
        ports:
        - containerPort: 9090
          protocol: TCP

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: python
spec:
  replicas: 0
  rollbackTo:
    revision: 0
  selector:
    matchLabels:
      app: time2code
      component: python
  strategy:
    rollingUpdate:
      maxSurge: 1000
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: time2code
        component: python
    spec:
      containers:
      - env:
        - name: fprocess
          value: python3 time2py.py
        - name: https_proxy
          value: $https_proxy
        - name: no_proxy
          value: gateway
        - name: read_timeout
          value: "60"
        - name: write_timeout
          value: "60"
        image: jockdarock/time2py:latest
        imagePullPolicy: Always
        name: python
        volumeMounts: null
      volumes: null
      nodename: aci-connector

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: time2codeserver
spec:
  replicas: 3
  rollbackTo:
    revision: 0
  selector:
    matchLabels:
      app: time2code
      component: time2codeserver
  strategy:
    rollingUpdate:
      maxSurge: 10
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: time2code
        component: time2codeserver
    spec:
      containers:
      - image: jockdarock/time2codeserver:latest
        name: time2codeserver
        imagePullPolicy: Always
        env:
        - name: time2code_provider_url
          value: "http://time2codeserver.default:5555"
        ports:
        - containerPort: 5555
          protocol: TCP
        volumeMounts: null
      restartPolicy: Always
      volumes: null